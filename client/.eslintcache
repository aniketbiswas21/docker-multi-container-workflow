[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/OtherPage.js":"4","/app/src/Fib.js":"5"},{"size":500,"mtime":1609508176931,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1609508176931,"results":"8","hashOfConfig":"7"},{"size":711,"mtime":1609511524419,"results":"9","hashOfConfig":"7"},{"size":229,"mtime":1609510412290,"results":"10","hashOfConfig":"7"},{"size":1511,"mtime":1609511318923,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1rz4pfv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/app/src/index.js",[],["24","25"],"/app/src/reportWebVitals.js",[],"/app/src/App.js",[],"/app/src/OtherPage.js",[],"/app/src/Fib.js",["26"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Fib = () => {\n  const [seenIndexes, setSeenIndexes] = useState([]);\n  const [values, setValues] = useState({});\n  const [index, setIndex] = useState(\"\");\n  useEffect(() => {\n    fetchValues();\n    fetchIndexes();\n  }, []);\n\n  const fetchValues = async () => {\n    const values = await axios.get(\"/api/values/current\");\n    setValues(values.data);\n  };\n\n  const fetchIndexes = async () => {\n    const seenIndexes = await axios.get(\"/api/values/all\");\n    setIndex(seenIndexes.data);\n  };\n\n  function renderValues() {\n    const entries = [];\n\n    for (let key in values) {\n      entries.push(\n        <div key={key}>\n          For index {key} I calculated {values[key]}\n        </div>\n      );\n    }\n\n    return entries;\n  }\n\n  function renderSeenIndexes() {\n    return seenIndexes.map(({ number }) => number).join(\", \");\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    await axios.post(\"/api/values\", {\n      index,\n    });\n    setIndex(\"\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>Enter your index:</label>\n        <input\n          value={index}\n          onChange={(event) => {\n            setIndex(event.target.value);\n          }}\n        />\n        <button>Submit</button>\n      </form>\n\n      <h3>Indexes I have seen:</h3>\n      {renderSeenIndexes()}\n\n      <h3>Calculated Values:</h3>\n      {renderValues()}\n    </div>\n  );\n};\n\nexport default Fib;\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":5,"column":23,"nodeType":"33","messageId":"34","endLine":5,"endColumn":37},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'setSeenIndexes' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]